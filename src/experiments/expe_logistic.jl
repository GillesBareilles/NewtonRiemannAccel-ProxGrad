using SparseArrays

function run_expe_logistic(; NUMEXPS_OUTDIR = NUMEXPS_OUTDIR_DEFAULT)
    n, m = 4000, 400
    pb = get_logit_MLE_elastic_net(n=n, m=m, Î» = 0.01, lambda2 = 0.0)
    pbname = "logit-$(n)x$(m)-elasticnet"

    optparams_PG = OptimizerParams(iterations_limit = 1e5, time_limit = 15, trace_length=1e5)
    optparams_Newton = OptimizerParams(iterations_limit = 1e5, time_limit = 15, trace_length=1e5)

    x0 = rand(Normal(), n)
    optimizer = ProximalGradient()
    trace = optimize!(pb, optimizer, x0, optparams =  OptimizerParams(iterations_limit = 35, time_limit = 10, trace_length = 5), optimstate_extensions = osext_point)

    x0 = last(trace).additionalinfo.x
    println("starting point:" , x0)

    #
    ### First exact solve
    #
    optimizer_APG = ProximalGradient(extrapolation = AcceleratedProxGrad())
    optimizer_PG = ProximalGradient(extrapolation = VanillaProxGrad())
    optimizer_ManTN = PartlySmoothOptimizer(manifold_update = ManTruncatedNewton())

    nzind = [11, 57, 75, 84, 92, 98, 105, 166, 209, 225, 235, 276, 278, 283, 313, 328, 340, 369, 412, 439, 444, 474, 478, 488, 501, 503, 508, 520, 568, 570, 573, 575, 595, 680, 682, 693, 701, 704, 744, 752, 772, 782, 786, 809, 818, 831, 858, 861, 869, 872, 913, 931, 950, 965, 971, 974, 982, 992, 1002, 1004, 1020, 1025, 1054, 1061, 1065, 1092, 1124, 1127, 1138, 1143, 1161, 1186, 1190, 1220, 1221, 1230, 1236, 1260, 1273, 1288, 1293, 1295, 1303, 1305, 1312, 1317, 1329, 1345, 1348, 1361, 1379, 1389, 1404, 1408, 1414, 1418, 1430, 1492, 1495, 1524, 1527, 1530, 1535, 1561, 1603, 1623, 1640, 1679, 1680, 1705, 1718, 1725, 1727, 1768, 1789, 1798, 1822, 1833, 1836, 1841, 1869, 1883, 1903, 1908, 1937, 1944, 1946, 1958, 1964, 1971, 1972, 1999, 2011, 2024, 2027, 2048, 2055, 2118, 2146, 2148, 2157, 2169, 2178, 2179, 2209, 2213, 2218, 2228, 2256, 2263, 2264, 2280, 2309, 2314, 2355, 2375, 2383, 2399, 2403, 2411, 2429, 2436, 2438, 2442, 2446, 2470, 2475, 2508, 2516, 2519, 2524, 2549, 2550, 2627, 2681, 2688, 2702, 2713, 2742, 2757, 2762, 2764, 2835, 2846, 2849, 2851, 2867, 2872, 2883, 2910, 2928, 2932, 2962, 2964, 2981, 2996, 3010, 3015, 3018, 3054, 3069, 3080, 3081, 3145, 3147, 3151, 3155, 3182, 3187, 3202, 3205, 3260, 3261, 3278, 3289, 3290, 3300, 3352, 3357, 3363, 3393, 3398, 3399, 3436, 3463, 3473, 3509, 3514, 3525, 3542, 3546, 3548, 3563, 3657, 3683, 3705, 3708, 3716, 3729, 3732, 3744, 3768, 3792, 3812, 3816, 3820, 3856, 3878, 3942, 3950, 3964, 3968, 3969, 3977, 3985]
    nzval = [-0.024119894299753124, 0.04439344398197998, 0.027676571619326247, 0.046379247424204316, 0.03235882690029219, 0.08053304482992514, 0.13074253608353048, 0.1720234021377142, 0.01019868491410451, -0.017171658880989763, 0.007648014303897532, 0.019055742007718417, 0.0032954327802699086, -0.008248519372300787, -0.17343550049782244, -0.020273368816190643, 0.0067417436184126, -0.10745088888344821, 0.04223787206073644, -0.0629259923094415, -0.02007139015075902, 0.04400602859065407, 0.045367406149988444, 0.022458187574556518, 0.023159884992021793, 0.1367689893269687, 0.08845345599138195, 0.02031045296191021, 0.02131301557814883, 0.017454321221317046, -0.14160098776787983, 0.0041039455882710746, -0.01610033989032788, 0.020794342451185326, 0.05652270201768517, 0.01566665770078504, 0.02669690836490248, -0.10836995967278581, -0.0002965779604107618, 0.0910911779229351, 0.154288841203143, -0.026631208860253674, 0.1296201112046632, 0.25045525572886174, -0.056178863713376034, -0.01386064356847521, -0.1954277604687384, -0.03649433777105545, -0.18295232590134725, -0.30246966468541386, 0.015137487641638301, -0.07022332499968816, -0.02834812129805633, -0.19827182474979588, 0.08046308153585781, 0.2360166085458201, 0.00921937948649956, -0.013319692055811362, 0.19571937284131533, -0.07661740241152042, -0.10074964884392651, -0.2514853187917233, 0.12463667159908236, 0.01970219042784364, -0.009000305519814634, 0.020866873047145764, 0.19658749605277417, -0.08535590285547529, 0.10191009526267558, -0.01419310015066442, 0.0017461894373873225, -0.06525627618844797, -0.0015642778428318744, -0.015178913937601329, -0.20098190450538023, -0.09482097487622083, 0.07865695869797402, 0.06102730668449587, 0.05231929634112762, 0.08749760165102799, -0.07298935066155422, -0.1150148451639252, 0.024122129493260768, -0.1445083687944184, 0.010146916927505583, 0.09592737172584483, -0.0461698670087905, -0.03358503627811654, 0.11470356948239806, -0.0054757562472468385, 0.10346683012669795, 0.12718760637060406, 0.10317887211411718, -0.11605459477516589, -0.0056815375784977805, 0.039628764450508294, 0.005857375362306461, 0.010856492376995375, 0.02986961959701209, 0.010008698751431667, 0.130181544558777, 0.018120168919971043, -0.07251055300236474, -0.04876367731882815, -0.0005001286223839227, 0.024221661993427086, 0.03219220381884822, -0.14001774306884726, 0.1303689476994944, 0.017997065592495115, -0.002866837004432548, -0.04195204818568673, -0.18121764609460803, -0.02642987584097224, 0.12449836242925541, 0.19373376494821432, 0.005598290109919377, -0.16812263489362278, -0.005853632137916569, -0.07546144826048237, 0.05618598828590247, 0.008067069585858004, -0.03493758792414066, -0.061534894282530284, 0.25282912867263124, 0.10875384056697096, 0.0971133583231312, 0.14054455739188018, 0.13362588238915982, 0.36426568473197835, 0.004241008499019954, -0.011445879571414134, -0.10201758296620386, -0.00035916244037317125, -0.07483481608381175, -0.03745567769813409, -0.0025003736559954153, 0.0018932194782483266, -0.04480943508970282, 0.26933888127898664, -0.07023956318092948, -0.010985078925347743, 0.008431438427567287, 0.07887710549398558, -0.14010092823438697, -0.006816871509727653, 0.03968277608642312, -0.06068900101285333, -0.13826955914054145, 0.18068587182581844, 0.0033517168696892492, -0.05474507522649519, 0.1521028229910294, -0.061988313002245374, -0.2097217236000834, 0.03373459926688758, -0.14219138101357257, -0.044468315042478404, 0.18364960355253473, -0.07769791605339073, 0.1721576495013666, 0.02607796987056728, 0.2095385931421695, 0.09378673839857316, -0.15748907343414112, -0.015622619654554448, 0.030850730876679704, 0.12286033627386447, 0.020258912622460618, 0.03825280872129047, 0.14053886551033903, 0.019512963149259988, -0.23115889360429637, 0.20959802217771062, 0.04683755858081891, 0.06728150097191588, -0.031644785732207484, 0.023593390517892242, -0.15668294245692366, -0.12444967723107082, 0.20080015400623039, 0.055765829801259784, -0.08113852027665296, 0.047583037152910596, 0.011033588851113139, 0.024462670230692728, -0.012145811337613074, -0.04030596945846157, 0.0070909242297423035, 0.14336086239178797, -0.007227328754647581, 0.024782640951016652, 0.09136831871838633, 0.012088268598553978, 0.09284622237456353, -0.18680319131267228, 0.07044361350137225, 0.05000451361333739, 0.0836404955509879, -0.09361307651833463, -0.004276877518445563, -0.10086777339072939, -0.13271654464930693, -0.3168573339697447, 0.009182373628640973, 0.006781730026348481, 0.09546431100251018, 0.1394968492754646, 0.2861833952517595, -0.08833167959988517, -0.042821225833877145, 0.04228972079026232, -0.0856870733624605, -0.15737178950637745, 0.07663652066307065, 0.0032995987563264853, 0.067486666623783, -0.11065016352583451, -0.19857240144618846, 0.034486090970376894, 0.07317399359380211, -0.09520970848610465, 0.005830256766978693, 0.2740642522879779, -0.06935210871124654, -0.0922738314214271, 0.029631881862005167, 0.07471590344393385, 0.10979698427721012, 0.1809100466255748, -0.04813619656268638, -0.0700330670836458, -0.09057006256949199, -0.19355770183207227, -0.01990369622588875, 0.205880565960436, -0.05152687182783659, 0.0006062874256143422, -0.04813431051541687, 0.009929208740147605, -0.026497384848816495, -0.1712523647835703, -0.004849357532216702, -0.07995232454764314, -0.14753995588473343, 0.006853139180553076, 0.0301538586324458, 0.039252167223230015, 0.22466671203219216, -0.1655387214772608, 0.04497215265739733, 0.13718734552481518, -0.0706525819683466, -0.12332826395955672, 0.018421238855063127]
    xnearopt = Vector(sparsevec(nzind, nzval, 4000))

    trace = optimize!(pb, optimizer_APG, xnearopt, optparams = optparams_PG, optimstate_extensions = osext_point)

    M_opt = last(trace).additionalinfo.M
    F_opt = last(trace).f_x + last(trace).g_x


    #
    ### Run numerical experiments, or recover logged data
    #
    # if !isfile(joinpath(NUMEXPS_OUTDIR, "$pbname.jld"))
    optimdata = run_algorithms(pbname, pb, x0, optparams_PG, optparams_Newton, M_opt, F_opt, osext, NUMEXPS_OUTDIR, CG_maxiter=50)
    # end

    println("Opening trace logs file: ", joinpath(NUMEXPS_OUTDIR, "$pbname.jld"))
    @load joinpath(NUMEXPS_OUTDIR, "$pbname.jld") optimdata M_opt F_opt

    #
    ### Build numerical exps data
    #
    fig = process_expe_data(optimdata, pbname, M_opt, F_opt, NUMEXPS_OUTDIR)

    return nothing
end
